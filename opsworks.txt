
strikethroughmnyof2rr5b
/strikethrough
strikethroughcheck instance is running which services 
add it to git 

using git for stoting repo and deploying it to  doc root of instance
document root is /srv/www/app_name/  for php app
/strikethrough
strikethroughcheck if whatever goes to git goes to running instance or not /strikethrough

strikethroughdeploy an app/strikethrough

strikethroughcheck dbinstance to Ec2_instance connection
&
rds security group defined manually and adding ip of your local system for testing  purpose and then adding internal i.p. of an instance if its in same zone and adding publice i.p. of an instance if its in other zone

security groups : 
/strikethrough
strikethroughrds access from local system -- security group issue/strikethrough
strikethroughsolution - define a new security gro/strikethrough

check zones and regions aws
via making

strikethroughboldsame region , same zone --- ec2 n rds/bold
region orgeon
ec2 zone us-west-2a
rds zone us-west-2a
access dealt with private/local ip address

boldsame region  , diff zone instances -- ec2 and rds/bold
region orgeon
ec2 zone us-west-2b
rds zone us-west-2a
rds access dealt with private/local ip address
/strikethrough
boldstrikethroughdiff region instances -- ec2 and rds/bold
not possible , both have to be in same instances /strikethrough


check what is my sql instance in opswork
for mysql layer you will be requiring mysql instance and for that 
you can create an instance by 
1) opswork method --- was fine cant go further as somehow not allowing mysql to be accessed by my local machine --stucked at that
may be security groups of opswork not allowing it to hence 

solution to that problem : -

boldyou can add your custom security group to mysql layer /bold
1) it wont be effective for running mysql instance
-- 1.1) rebooting the instance -- cant restart after adding security 		     group --- setup failed
--1.2) even after removing added security group -- on rebooting , 
	   setup failed
 --1.3 ) have to make another mysqlinstance ( added additional 		     default group to the layer ) --- ok - and -- accessible
boldyou can change security groups of mysqlinstance which is also an ec2 instance from ec2dashboard
/bold

	underlineboldusing mysqlinstance instead of rds/bold/underline

the app defines the database name for rds or for mysqlinstance 
mysqlinstance -- it is a ec2 instance with mysql installed only

so 
1) in mysqlinstance there will be a database named under the name 		you defined  in the app layer 
2)  integrating db to any of the php running  instances by allowing   		db 	access as per mysqlinstance ( default root password defined	
	there )
3 ) can check your website


 
check custom ami image part also

what is cheff and recipes

mysql layer 
root 
password : 4nohqxcpwk



